
1* build streams for (cutlery) pipes
2* build client_set, that gives out a readymade connection and takes it back once you are done, it has flag called renew that renews the connection, it keeps queued active connections, number of active client set can be changed at runtime and client count is maintained almost constant - this will use sync_queue to store streams, it has all the params to build and create new clients

3* server passes on its own server address and client address to its stream_handlers some how

4* (future) build write and read stream api for zlib compressors and decompressors

5* (future) propogate the connection_stream based api to dependent libraries

 --6* write new testcases and test old functioning using Serc and current test cases at every point

7* (future) look into building a framework for select, poll and epoll based non_blocking support for client or server, and how should an api look like, like storing a void* per file descriptor and etc