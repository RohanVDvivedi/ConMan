
1* propogate stream and client_set api to serc, cashed.
2* implement stream util with following functions
   * write_to_stream_formatted
   * parse_unsigned_int parse_int parse_dstring_until -> reads into dstring until maximum characters read or until a dstring is encountered, use cutlery KMP prefix suffix same functionality for parsing, returns MAX_BYTES_ENCOUNTERED, LIMIT_STRING_ENCOUNTERED
   * parse_keywords takes in a array of dstring that are to be read, it returns the longest keyword matched, or an error
   * parse_whitespaces and return the number of white spaces encountered, you can also pass in max white spaces count

Far Future
4* server passes on its own server address and client address to its stream_handlers some how
5* build write and read stream api for zlib compressors and decompressors
6* look into building a framework for select, poll and epoll based non_blocking support for client or server, and how should an api look like, like storing a void* per file descriptor and etc
